cd desktop

git config --global user.name "gabi"

git config --global user.email "nicoletigabriela2@gmail.com"

git clone https://github.com/gabs-n/GalloFlix.git

/* Apenas caso vc não tenha criado o GitIgnore no Repositório */ já
dotnet new gitignore

dotnet new sln --name GalloFlix

dotnet new mvc --name GalloFlix -f Net6.0


ou 

dotnet new mvc -f net6.0 -o GalloFlix

dotnet sln add GalloFlix\GalloFlix.csproj

git add .

git commit -m "Criada a solução e o projeto MVC GalloFlix"

git push (empurrar)

git pull (puxar)

dotnet watch run --project GalloFlix\GalloFlix.csproj

/* Apos acessar a pasta do projeto no terminal */
dotnet watch run

-- ###########################################################################################################################################
-- ###########################################################################################################################################
-- ###########################################################################################################################################
-- ###########################################################################################################################################

-- Melhorando a exibição dos Dados com Datatables: disponível em <https://datatables.net/>


-- Criar o arquivo abaixo na pasta wwwroot\js:
 - datatables.js


-- Abrir e alterar o arquivo wwwroot\js\datatables.js:
jQuery.extend(jQuery.fn.dataTableExt.oSort, {
    "portugues-pre": function (data) {
        var a = 'a';
        var e = 'e';
        var i = 'i';
        var o = 'o';
        var u = 'u';
        var c = 'c';
        var special_letters = {
            "Á": a, "á": a, "Ã": a, "ã": a, "À": a, "à": a,
            "É": e, "é": e, "Ê": e, "ê": e,
            "Í": i, "í": i, "Î": i, "î": i,
            "Ó": o, "ó": o, "Õ": o, "õ": o, "Ô": o, "ô": o,
            "Ú": u, "ú": u, "Ü": u, "ü": u,
            "ç": c, "Ç": c
        };
        for (var val in special_letters)
            data = data.split(val).join(special_letters[val]).toLowerCase();
        return data;
    },
    "portugues-asc": function (a, b) {
        return ((a < b) ? -1 : ((a > b) ? 1 : 0));
    },
    "portugues-desc": function (a, b) {
        return ((a < b) ? 1 : ((a > b) ? -1 : 0));
    }
});

$(document).ready(function () {
    let table = new DataTable('#myTable', {
        responsive: true,
        columnDefs: [{ type: 'portugues', targets: "_all" }],
        language: {
            url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/pt-BR.json'
        }
    });

    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
});


-- Abrir e alterar o arquivo Views\Shared\_LayoutAdmin.cshtml:  // Pra ter certeza que está tudo ok
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> signInManager
@inject UserManager<AppUser> userManager
@{
    var user = await userManager.GetUserAsync(User);
    string profilePicture = user.ProfilePicture ?? "~/img/users/no-photo.png";
}

<!DOCTYPE html>
<html lang="pt-br" data-bs-theme="auto">

<head>
    <script src="~/js/color-modes.js"></script>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>GalloFlix | @ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
    <link rel="icon" type="image/x-icon" href="~/img/logosmall.png">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

    @await RenderSectionAsync("Styles", required: false)
    <meta name="theme-color" content="#712cf9">
</head>

<body>
    <partial name="_StyleSwitcher"></partial>
    <partial name="_Loading"></partial>

    <div class="container-fluid p-0">
        <main role="main" class="d-flex flex-nowrap">
            <div id="sidebar" class="d-flex flex-column flex-shrink-0 p-3 bg-body-tertiary" style="width: 280px;">
                <a asp-action="Index" asp-controller="Admin"
                    class="d-flex align-items-center mb-3 mb-md-0 me-md-auto link-body-emphasis text-decoration-none">
                    <img class="img-fluid" src="~/img/logo.png" alt="Logo">
                </a>
                <hr>
                <ul class="nav nav-pills flex-column mb-auto">
                    <li class="nav-item">
                        <a asp-action="Index" asp-controller="Admin" class="nav-link @(ViewBag.Title == "Dashboard" ? "active" : "link-body-emphasis")">
                            <i class="bi bi-speedometer2 me-2"></i>
                            Dashboard
                        </a>
                    </li>
                    <li>
                        <a asp-action="Index" asp-controller="Movies" class="nav-link @(ViewBag.Title == "Filmes" ? "active" : "link-body-emphasis")">
                            <i class="bi bi-film me-2"></i>
                            Filmes
                        </a>
                    </li>
                    <li>
                        <a asp-action="Index" asp-controller="Genres" class="nav-link @(ViewBag.Title == "Gêneros" ? "active" : "link-body-emphasis")">
                            <i class="bi bi-list-stars me-2"></i>
                            Gêneros
                        </a>
                    </li>
                    <li>
                        <a href="#" class="nav-link @(ViewBag.Title == "Usuários" ? "active" : "link-body-emphasis")">
                            <i class="bi bi-people-fill me-2"></i>
                            Usuários
                        </a>
                    </li>
                    <li>
                        <a href="#" class="nav-link @(ViewBag.Title == "Comentários" ? "active" : "link-body-emphasis")">
                            <i class="bi bi-chat-text-fill me-2"></i>
                            Comentários
                        </a>
                    </li>
                    <li>
                        <a href="#" class="nav-link @(ViewBag.Title == "Avaliações" ? "active" : "link-body-emphasis")">
                            <i class="bi bi-stars me-2"></i>
                            Avaliações
                        </a>
                    </li>
                </ul>
                <hr>
                <div class="dropdown">
                    <a href="#"
                        class="d-flex align-items-center link-body-emphasis text-decoration-none dropdown-toggle"
                        data-bs-toggle="dropdown" aria-expanded="false">
                        <img src="@profilePicture" alt="Foto de Perfil" width="40" class="image-rounded me-3">
                        <strong>@User.Identity?.Name</strong>
                    </a>
                    <ul class="dropdown-menu text-small shadow">
                        <li><a class="dropdown-item" href="#">Perfil</a></li>
                        <li><a class="dropdown-item" href="#">Configurações</a></li>
                        <li>
                            <hr class="dropdown-divider">
                        </li>
                        <li>
                            <form class="form-inline" asp-controller="Account"
                                asp-action="Logout">
                                <button type="submit" class="dropdown-item">
                                    Sair
                                </button>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>

            <div class="container-fluid py-2">
                <nav class="navbar sticky-top border-bottom">
                    <button id="sidebarToggler" class="navbar-toggler border-0 p-0" type="button" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                </nav>
                <div class="container-fluid p-3">
                    @RenderBody()
                </div>
            </div>
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>


-- Abrir e alterar o arquivo Views\Genres\Index.cshtml:
@model IEnumerable<GalloFlix.Models.Genre>
@{
    ViewData["Title"] = "Gêneros";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.css" />
}
@section Scripts {
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.js"></script>
    <script src="~/js/datatables.js"></script>
}

<h1  class="display-4">Lista de Gêneros</h1>
<p class="py-3">
    <a class="btn btn-secondary" asp-action="Create"><i class="bi bi-plus-circle-fill"></i> Adicionar</a>
</p>
<table id="myTable" class="table w-100">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" data-bs-toggle="tooltip" data-bs-title="Editar Gênero"><i class="bi bi-pencil-fill me-2"></i></a> 
                    <a asp-action="Details" asp-route-id="@item.Id" data-bs-toggle="tooltip" data-bs-title="Exibir Detalhes"><i class="bi bi-search me-2"></i></a> 
                    <a asp-action="Delete" asp-route-id="@item.Id" data-bs-toggle="tooltip" data-bs-title="Excluir Gênero"><i class="bi bi-trash-fill"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>


-- Abrir e alterar o arquivo Views\Filmes\Index.cshtml:
@model IEnumerable<GalloFlix.Models.Movie>
@{
    ViewData["Title"] = "Filmes";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.css" />
}
@section Scripts {
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.js"></script>
    <script src="~/js/datatables.js"></script>
}

<h1 class="display-4">Lista de Filmes</h1>
<p class="py-3">
    <a class="btn btn-secondary" asp-action="Create"><i class="bi bi-plus-circle-fill"></i> Adicionar</a>
</p>
<table id="myTable" class="table w-100">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OriginalTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MovieYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HourDuration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AgeRating)
            </th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OriginalTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MovieYear)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HourDuration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Classification)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" data-bs-toggle="tooltip" data-bs-title="Editar Filme"><i class="bi bi-pencil-fill me-2"></i></a> 
                    <a asp-action="Details" asp-route-id="@item.Id" data-bs-toggle="tooltip" data-bs-title="Exibir Detalhes"><i class="bi bi-search me-2"></i></a> 
                    <a asp-action="Delete" asp-route-id="@item.Id" data-bs-toggle="tooltip" data-bs-title="Excluir Filme"><i class="bi bi-trash-fill"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>


-- Salve tudo e execute. Faça login entre na área administrativa e clique em Gêneros e depois em Filmes para ver as diferenças


-- Abrir e alterar o arquivo Views\Genres\Create.cshtml:
@model GalloFlix.Models.Genre

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="col-md-4 m-auto">
    <h1 class="display-4">Gênero</h1>
    <h4 class="display-6">Adicionar</h4>
    <hr />

    <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group mt-4">
            <button type="submit" class="btn btn-success me-3"><i class="bi bi-save2-fill"></i> Salvar</button>
            <a asp-action="Index" class="btn btn-primary"><i class="bi bi-arrow-left-circle-fill"></i> Voltar a Listagem</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


-- Abrir e alterar o arquivo Views\Genres\Delete.cshtml:
@model GalloFlix.Models.Genre
@{
    ViewData["Title"] = "Delete";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="col-md-4 m-auto">

    <h1 class="display-4">Gênero</h1>
    <h4 class="display-6">Excluir</h4>
    <hr />

    <h3 class="text-danger">Confirma a exclusão desse Gênero?</h3>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
    </dl>

    <form asp-action="Delete" class="mt-4">
        <input type="hidden" asp-for="Id" />
        <button type="submit" class="btn btn-danger me-3"><i class="bi bi-trash-fill"></i> Excluir</button>
        <a asp-action="Index" class="btn btn-primary"><i class="bi bi-arrow-left-circle-fill"></i> Voltar a Listagem</a>
    </form>
</div>



-- Abrir e alterar o arquivo Views\Genres\Details.cshtml:
@model GalloFlix.Models.Genre
@{
    ViewData["Title"] = "Gêneros";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="col-md-4 m-auto">

    <h1 class="display-4">Gênero</h1>
    <h4 class="display-6">Alterar</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
    </dl>
    <div class="mt-4">
        <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-success me-3"><i class="bi bi-pencil-fill"></i> Editar</a>
        <a asp-action="Index" class="btn btn-primary"><i class="bi bi-arrow-left-circle-fill"></i> Voltar a Listagem</a>
    </div>
</div>


-- Abrir e alterar o arquivo Views\Genres\Edit.cshtml:
@model GalloFlix.Models.Genre
@{
    ViewData["Title"] = "Gêneros";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="col-md-4 m-auto">

    <h1 class="display-4">Gênero</h1>
    <h4 class="display-6">Alterar</h4>
    <hr />

    <form asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group mt-4">
            <button type="submit" class="btn btn-success me-3"><i class="bi bi-save2-fill"></i> Salvar</button>
            <a asp-action="Index" class="btn btn-primary"><i class="bi bi-arrow-left-circle-fill"></i> Voltar a Listagem</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


-- Salve tudo e execute. Faça login entre na área administrativa e clique em Gêneros para ver as diferenças (Teste todas as opções do CRUD)


-- Abrir e alterar o arquivo Controllers\MoviesControllers.cs:
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Rendering;
using Microsoft.EntityFrameworkCore;
using GalloFlix.Data;
using GalloFlix.Models;

namespace GalloFlix.Controllers
{
    public class MoviesController : Controller
    {
        private readonly AppDbContext _context;
        private readonly IWebHostEnvironment _hostEnvironment;

        public MoviesController(AppDbContext context, IWebHostEnvironment hostEnvironment)
        {
            _context = context;
            _hostEnvironment = hostEnvironment;
        }

        // GET: Movies
        public async Task<IActionResult> Index()
        {
            return View(await _context.Movies.ToListAsync());
        }

        // GET: Movies/Details/5
        public async Task<IActionResult> Details(int? id)
        {
            if (id == null || _context.Movies == null)
            {
                return NotFound();
            }
            var movie = await _context.Movies
                .Where(m => m.Id == id)
                .Include(m => m.Genres).ThenInclude(g => g.Genre)
                .SingleOrDefaultAsync();
            if (movie == null)
            {
                return NotFound();
            }
            return View(movie);
        }

        // GET: Movies/Create
        public IActionResult Create()
        {
            ViewData["Genres"] = new MultiSelectList(_context.Genres.OrderBy(t => t.Name), "Id", "Name");
            return View();
        }

        // POST: Movies/Create
        // To protect from overposting attacks, enable the specific properties you want to bind to.
        // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> Create([Bind("Id,Title,OriginalTitle,Synopsis,MovieYear,Duration,AgeRating,Image")] Movie movie, IFormFile formFile, List<string> Genres)
        {
            if (ModelState.IsValid)
            {
                // Salva o Filme
                _context.Add(movie);
                await _context.SaveChangesAsync();

                // Se tiver arquivo de imagem, salva a imagem no servidor com o ID do filme e adiciona o nome e caminho da imagem no banco
                if (formFile != null)
                {
                    string wwwRootPath = _hostEnvironment.WebRootPath;
                    string fileName = movie.Id.ToString("00") + Path.GetExtension(formFile.FileName);
                    string uploads = Path.Combine(wwwRootPath, @"img\movies");
                    string newFile = Path.Combine(uploads, fileName);
                    using (var stream = new FileStream(newFile, FileMode.Create))
                    {
                        formFile.CopyTo(stream);
                    }
                    movie.Image = @"\img\movies\" + fileName;
                    await _context.SaveChangesAsync();
                }

                // Salva, se tiver, os Gêneros selecionados
                movie.Genres = new List<MovieGenre>();
                foreach (var genre in Genres)
                {
                    movie.Genres.Add(new MovieGenre()
                    {
                        GenreId = byte.Parse(genre),
                        MovieId = movie.Id
                    });
                }
                if (Genres.Count > 0) await _context.SaveChangesAsync();

                return RedirectToAction(nameof(Index));
            }
            ViewData["Genres"] = new MultiSelectList(_context.Genres.OrderBy(t => t.Name), "Id", "Name");
            return View(movie);
        }

        // GET: Movies/Edit/5
        public async Task<IActionResult> Edit(int? id)
        {
            if (id == null || _context.Movies == null)
            {
                return NotFound();
            }
            var movie = await _context.Movies
                .Where(m => m.Id == id)
                .Include(m => m.Genres).ThenInclude(g => g.Genre)
                .SingleOrDefaultAsync();
            if (movie == null)
            {
                return NotFound();
            }
            var x = new MultiSelectList(_context.Genres.OrderBy(t => t.Name), "Id", "Name", movie.Genres.Select(g => g.Genre.Id.ToString()));
            ViewData["Genres"] = x;
            return View(movie);
        }

        // POST: Movies/Edit/5
        // To protect from overposting attacks, enable the specific properties you want to bind to.
        // For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> Edit(int id, [Bind("Id,Title,OriginalTitle,Synopsis,MovieYear,Duration,AgeRating,Image")] Movie movie, IFormFile formFile, List<string> Genres)
        {
            if (id != movie.Id)
            {
                return NotFound();
            }

            if (ModelState.IsValid)
            {
                try
                {
                    // Atualiza a Foto de Capa
                    if (formFile != null)
                    {
                        string wwwRootPath = _hostEnvironment.WebRootPath;
                        if (movie.Image != null)
                        {
                            string oldFile = Path.Combine(wwwRootPath, movie.Image.TrimStart('\\'));
                            if (System.IO.File.Exists(oldFile))
                            {
                                System.IO.File.Delete(oldFile);
                            }
                        }

                        string fileName = movie.Id.ToString("00") + Path.GetExtension(formFile.FileName);
                        string uploads = Path.Combine(wwwRootPath, @"img\pokemons");
                        string newFile = Path.Combine(uploads, fileName);
                        using (var stream = new FileStream(newFile, FileMode.Create))
                        {
                            formFile.CopyTo(stream);
                        }
                        movie.Image = @"\img\movies\" + fileName;
                    }
                    movie.Genres = _context.MovieGenres.Where(mg => mg.MovieId == movie.Id).OrderBy(mg => mg.GenreId).ToList();
                    _context.Update(movie);
                    _context.RemoveRange(movie.Genres);
                    await _context.SaveChangesAsync();

                    // Adiciona os Gêneros do Filme
                    Genres.ForEach(g => _context.MovieGenres.Add(
                        new MovieGenre()
                        {
                            MovieId = movie.Id,
                            GenreId = byte.Parse(g)
                        }
                    ));
                    await _context.SaveChangesAsync();

                }
                catch (DbUpdateConcurrencyException)
                {
                    if (!MovieExists(movie.Id))
                    {
                        return NotFound();
                    }
                    else
                    {
                        throw;
                    }
                }
                return RedirectToAction(nameof(Index));
            }
            ViewData["Genres"] = new SelectList(_context.Genres.OrderBy(t => t.Name), "Id", "Name");
            return View(movie);
        }

        // GET: Movies/Delete/5
        public async Task<IActionResult> Delete(int? id)
        {
            if (id == null || _context.Movies == null)
            {
                return NotFound();
            }

            var movie = await _context.Movies
                .Where(m => m.Id == id)
                .Include(m => m.Genres).ThenInclude(g => g.Genre)
                .SingleOrDefaultAsync();
            if (movie == null)
            {
                return NotFound();
            }

            return View(movie);
        }

        // POST: Movies/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> DeleteConfirmed(int id)
        {
            if (_context.Movies == null)
            {
                return Problem("Entity set 'AppDbContext.Movies'  is null.");
            }
            var movie = await _context.Movies.FindAsync(id);
            if (movie != null)
            {
                var movieGenres = await _context.MovieGenres.Where(mg => mg.MovieId == id).ToListAsync();
                _context.MovieGenres.RemoveRange(movieGenres);
                _context.Movies.Remove(movie);
            }

            await _context.SaveChangesAsync();
            return RedirectToAction(nameof(Index));
        }

        private bool MovieExists(int id)
        {
            return _context.Movies.Any(e => e.Id == id);
        }
    }
}


-- Abrir e alterar o arquivo Views\Movies\Create.cshtml:
@model GalloFlix.Models.Movie
@{
    ViewData["Title"] = "Filmes";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1 class="display-4">Filmes</h1>
<h4 class="display-6">Adicionar</h4>
<hr />
<form asp-action="Create" class="row" enctype="multipart/form-data">
    <div class="col-md-6 col-sm-12 col-xxl-7">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-12 mb-2">
            <label asp-for="Title" class="form-label"></label>
            <input asp-for="Title" class="form-control" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="col-12 mb-2">
            <label asp-for="OriginalTitle" class="form-label"></label>
            <input asp-for="OriginalTitle" class="form-control" />
            <span asp-validation-for="OriginalTitle" class="text-danger"></span>
        </div>
        <div class="col-12 mb-2">
            <label asp-for="Synopsis" class="form-label"></label>
            <textarea asp-for="Synopsis" class="form-control" rows="3"></textarea>
            <span asp-validation-for="Synopsis" class="text-danger"></span>
        </div>
        <div class="row mb-2">
            <div class="col-md-4">
                <label asp-for="MovieYear" class="form-label"></label>
                <input asp-for="MovieYear" class="form-control" />
                <span asp-validation-for="MovieYear" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="Duration" class="form-label"></label>
                <input asp-for="Duration" class="form-control" />
                <span asp-validation-for="Duration" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="AgeRating" class="form-label"></label>
                <input asp-for="AgeRating" class="form-control" />
                <span asp-validation-for="AgeRating" class="text-danger"></span>
            </div>
        </div>
    </div>
        <div class="col-md-2 col-sm-12 col-xxl-2"> 
        <label class="form-label">Gêneros</label>
        <select class="form-select" multiple asp-items="ViewBag.Genres" name="Genres" size="15">
        </select>
    </div>
    <div class="col-md-4 col-sm-12 col-xxl-3">
        <div class="form-group">
            <label asp-for="Image" class="form-label"></label>
            <img id="PreviewImage" src="~/img/sem_foto.png" class="img-fluid w-100 pointer" onclick="changeImage()">
            <input type="file" name="formFile" class="form-control" accept=".jpg,.jpeg,.png,.gif,.jfif" />
            <input asp-for="Image" class="d-none" />
            <span asp-validation-for="Image" class="text-danger"></span>
        </div>
    </div>
    <div class="col-12 mt-4">
        <button type="submit" class="btn btn-success me-3"><i class="bi bi-save2-fill"></i> Salvar</button>
        <a asp-action="Index" class="btn btn-primary"><i class="bi bi-arrow-left-circle-fill"></i> Voltar a
            Listagem</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function changeImage(){
            document.querySelector('input[type="file"]').click();
        }

        window.addEventListener('load', function () {
            document.querySelector('input[type="file"]').addEventListener('change', function () {
                if (this.files && this.files[0]) {
                    var img = document.getElementById('PreviewImage');
                    img.src = URL.createObjectURL(this.files[0]);
                }
            });
        });
    </script>
}


-- Abrir e alterar o arquivo Views\Movies\Delete.cshtml:
@model GalloFlix.Models.Movie

@{
    ViewData["Title"] = "Delete";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1 class="display-4">Filmes</h1>
<h4 class="display-6">Excluir</h4>
<hr />
<h3 class="text-danger">Confirma a exclusão desse Filme?</h3>
<div class="row" enctype="multipart/form-data">
    <div class="col-md-4 col-sm-12 col-xxl-3">
        <div class="form-group">
            <label asp-for="Image" class="form-label"></label>
            <img id="PreviewImage" src="@Model.Image" class="img-fluid w-100">
        </div>
    </div>
    <div class="col-md-8 col-sm-12 col-xxl-9">
        <div class="col-12 mb-2">
            <label asp-for="Title" class="form-label"></label>
            <input asp-for="Title" class="form-control" disabled/>
        </div>
        <div class="col-12 mb-2">
            <label asp-for="OriginalTitle" class="form-label"></label>
            <input asp-for="OriginalTitle" class="form-control" disabled/>
        </div>
        <div class="col-12 mb-2">
            <label asp-for="Synopsis" class="form-label"></label>
            <textarea asp-for="Synopsis" class="form-control" rows="3" disabled></textarea>
        </div>
        <div class="row mb-2">
            <div class="col-md-4">
                <label asp-for="MovieYear" class="form-label"></label>
                <input asp-for="MovieYear" class="form-control" disabled/>
            </div>
            <div class="col-md-4">
                <label asp-for="Duration" class="form-label"></label>
                <input asp-for="Duration" class="form-control" disabled/>
            </div>
            <div class="col-md-4">
                <label asp-for="AgeRating" class="form-label"></label>
                <input asp-for="AgeRating" class="form-control" disabled/>
            </div>
        </div>
        <div class="btn-group my-2">
            @foreach (MovieGenre movieGenre in Model.Genres)
            {
                <h2><span class="badge bg-secondary me-2">@movieGenre.Genre.Name</span></h2>
            }
        </div>
    </div>
    <form asp-action="Delete" class="col-12 mt-4">
        <input type="hidden" asp-for="Id" />
        <button type="submit" class="btn btn-danger me-3"><i class="bi bi-trash-fill"></i> Excluir</button>
        <a asp-action="Index" class="btn btn-primary"><i class="bi bi-arrow-left-circle-fill"></i> Voltar a Listagem</a>
    </form>
</div>


-- Abrir e alterar o arquivo Views\Movies\Details.cshtml:
@model GalloFlix.Models.Movie
@{
    ViewData["Title"] = "Filmes";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1 class="display-4">Filmes</h1>
<h4 class="display-6">Detalhes</h4>
<hr />
<div class="row" enctype="multipart/form-data">
    <div class="col-md-4 col-sm-12 col-xxl-3">
        <div class="form-group">
            <label asp-for="Image" class="form-label"></label>
            <img id="PreviewImage" src="@Model.Image" class="img-fluid w-100">
        </div>
    </div>
    <div class="col-md-8 col-sm-12 col-xxl-9">
        <div class="col-12 mb-2">
            <label asp-for="Title" class="form-label"></label>
            <input asp-for="Title" class="form-control" disabled/>
        </div>
        <div class="col-12 mb-2">
            <label asp-for="OriginalTitle" class="form-label"></label>
            <input asp-for="OriginalTitle" class="form-control" disabled/>
        </div>
        <div class="col-12 mb-2">
            <label asp-for="Synopsis" class="form-label"></label>
            <textarea asp-for="Synopsis" class="form-control" rows="3" disabled></textarea>
        </div>
        <div class="row mb-2">
            <div class="col-md-4">
                <label asp-for="MovieYear" class="form-label"></label>
                <input asp-for="MovieYear" class="form-control" disabled/>
            </div>
            <div class="col-md-4">
                <label asp-for="Duration" class="form-label"></label>
                <input asp-for="Duration" class="form-control" disabled/>
            </div>
            <div class="col-md-4">
                <label asp-for="AgeRating" class="form-label"></label>
                <input asp-for="AgeRating" class="form-control" disabled/>
            </div>
        </div>
        <div class="btn-group my-2">
            @foreach (MovieGenre movieGenre in Model.Genres)
            {
                <h2><span class="badge bg-secondary me-2">@movieGenre.Genre.Name</span></h2>
            }
        </div>
    </div>
    <div class="col-12 mt-4">
        <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-success me-3"><i class="bi bi-pencil-fill"></i> Editar</a>
        <a asp-action="Index" class="btn btn-primary"><i class="bi bi-arrow-left-circle-fill"></i> Voltar a Listagem</a>
    </div>
</div>


-- Abrir e alterar o arquivo Views\Movies\Edit.cshtml:
@model GalloFlix.Models.Movie
@{
    ViewData["Title"] = "Filmes";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1 class="display-4">Filmes</h1>
<h4 class="display-6">Alterar</h4>
<hr />
<form asp-action="Edit" class="row" enctype="multipart/form-data">
    <input type="hidden" asp-for="Id" />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="col-md-6 col-sm-12 col-xxl-7">
        <div class="col-12 mb-2">
            <label asp-for="Title" class="form-label"></label>
            <input asp-for="Title" class="form-control" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="col-12 mb-2">
            <label asp-for="OriginalTitle" class="form-label"></label>
            <input asp-for="OriginalTitle" class="form-control" />
            <span asp-validation-for="OriginalTitle" class="text-danger"></span>
        </div>
        <div class="col-12 mb-2">
            <label asp-for="Synopsis" class="form-label"></label>
            <textarea asp-for="Synopsis" class="form-control" rows="3"></textarea>
            <span asp-validation-for="Synopsis" class="text-danger"></span>
        </div>
        <div class="row mb-2">
            <div class="col-md-4">
                <label asp-for="MovieYear" class="form-label"></label>
                <input asp-for="MovieYear" class="form-control" />
                <span asp-validation-for="MovieYear" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="Duration" class="form-label"></label>
                <input asp-for="Duration" class="form-control" />
                <span asp-validation-for="Duration" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="AgeRating" class="form-label"></label>
                <input asp-for="AgeRating" class="form-control" />
                <span asp-validation-for="AgeRating" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="col-md-2 col-sm-12 col-xxl-2">
        <label class="form-label">Gêneros</label>
        <select class="form-select" multiple asp-items="ViewBag.Genres" name="Genres" size="15">
        </select>
    </div>
    <div class="col-md-4 col-sm-12 col-xxl-3">
        <div class="form-group">
            <label asp-for="Image" class="form-label"></label>
            <img id="PreviewImage" src="@Model.Image" class="img-fluid w-100 pointer" onclick="changeImage()">
            <input type="file" name="formFile" class="form-control" accept=".jpg,.jpeg,.png,.gif,.jfif" />
            <input asp-for="Image" class="d-none" />
            <span asp-validation-for="Image" class="text-danger"></span>
        </div>
    </div>
    <div class="col-12 mt-4">
        <button type="submit" class="btn btn-success me-3"><i class="bi bi-save2-fill"></i> Salvar</button>
        <a asp-action="Index" class="btn btn-primary"><i class="bi bi-arrow-left-circle-fill"></i> Voltar a
            Listagem</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        
        function changeImage(){
            document.querySelector('input[type="file"]').click();
        }

        window.addEventListener('load', function () {
            document.querySelector('input[type="file"]').addEventListener('change', function () {
                if (this.files && this.files[0]) {
                    var img = document.getElementById('PreviewImage');
                    img.src = URL.createObjectURL(this.files[0]);
                }
            });
        });


    </script>
}


